// Code generated by "stringer -type=ColumnType"; DO NOT EDIT.

package adt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ColumnTypeBool-1]
	_ = x[ColumnTypeCharacter-4]
	_ = x[ColumnTypeMemo-5]
	_ = x[ColumnTypeBlob-6]
	_ = x[ColumnTypeDouble-10]
	_ = x[ColumnTypeInt-11]
	_ = x[ColumnTypeShortInt-12]
	_ = x[ColumnTypeCiCharacter-20]
	_ = x[ColumnTypeAutoIncrement-15]
	_ = x[ColumnTypeDate-3]
	_ = x[ColumnTypeTime-13]
	_ = x[ColumnTypeTimestamp-14]
	_ = x[ColumnTypeCurrency-17]
	_ = x[ColumnTypeMoney-18]
}

const (
	_ColumnType_name_0 = "ColumnTypeBool"
	_ColumnType_name_1 = "ColumnTypeDateColumnTypeCharacterColumnTypeMemoColumnTypeBlob"
	_ColumnType_name_2 = "ColumnTypeDoubleColumnTypeIntColumnTypeShortIntColumnTypeTimeColumnTypeTimestampColumnTypeAutoIncrement"
	_ColumnType_name_3 = "ColumnTypeCurrencyColumnTypeMoney"
	_ColumnType_name_4 = "ColumnTypeCiCharacter"
)

var (
	_ColumnType_index_1 = [...]uint8{0, 14, 33, 47, 61}
	_ColumnType_index_2 = [...]uint8{0, 16, 29, 47, 61, 80, 103}
	_ColumnType_index_3 = [...]uint8{0, 18, 33}
)

func (i ColumnType) String() string {
	switch {
	case i == 1:
		return _ColumnType_name_0
	case 3 <= i && i <= 6:
		i -= 3
		return _ColumnType_name_1[_ColumnType_index_1[i]:_ColumnType_index_1[i+1]]
	case 10 <= i && i <= 15:
		i -= 10
		return _ColumnType_name_2[_ColumnType_index_2[i]:_ColumnType_index_2[i+1]]
	case 17 <= i && i <= 18:
		i -= 17
		return _ColumnType_name_3[_ColumnType_index_3[i]:_ColumnType_index_3[i+1]]
	case i == 20:
		return _ColumnType_name_4
	default:
		return "ColumnType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
